import{filter,find,forEach}from"min-dash";import{elementToString}from"./Util";import{ensureCompatDiRef}from"../util/CompatibilityUtil";function is(n,e){return n.$instanceOf(e)}function findDisplayCandidate(n){return find(n.rootElements,(function(n){return is(n,"bpmn:Process")||is(n,"bpmn:Collaboration")}))}export default function BpmnTreeWalker(n){var e={},t=[],i={};function o(n,e){return function(t){n(t,e)}}function r(n){e[n.id]=n}function f(e,t){try{var o=i[e.id]&&function(e,t){if(e.gfx)throw new Error(`already rendered ${elementToString(e)}`);return n.element(e,i[e.id],t)}(e,t);return r(e),o}catch(n){a(n.message,{element:e,error:n}),console.error(`failed to import ${elementToString(e)}`,n)}}function a(e,t){n.error(e,t)}var c=this.registerDi=function(n){var e=n.bpmnElement;e?i[e.id]?a(`multiple DI elements defined for ${elementToString(e)}`,{element:e}):(i[e.id]=n,ensureCompatDiRef(e)):a(`no bpmnElement referenced in ${elementToString(n)}`,{element:n})};function s(n){c(n)}this.handleDefinitions=function(r,f){var p=r.diagrams;if(f&&-1===p.indexOf(f))throw new Error("diagram not part of <bpmn:Definitions />");if(!f&&p&&p.length&&(f=p[0]),!f)throw new Error("no diagram to display");i={},function(n){var e;e=n.plane,c(e),forEach(e.planeElement,s)}(f);var d=f.plane;if(!d)throw new Error(`no plane for ${elementToString(f)}`);var h=d.bpmnElement;if(!h){if(!(h=findDisplayCandidate(r)))throw new Error("no process or collaboration to display");a(`correcting missing bpmnElement on ${elementToString(d)} to ${elementToString(h)}`),d.bpmnElement=h,c(d)}var b,g,S=function(e,t){return n.root(e,i[e.id],t)}(h,d);if(is(h,"bpmn:Process")||is(h,"bpmn:SubProcess"))l(h,S);else{if(!is(h,"bpmn:Collaboration"))throw new Error(`unsupported bpmnElement for ${elementToString(d)}: ${elementToString(h)}`);g=S,forEach((b=h).participants,o($,g)),E(b.artifacts,g),t.push((function(){!function(n,e){forEach(n,o(m,e))}(b.messageFlows,g)})),function(n,t){filter(n,(function(n){return!e[n.id]&&is(n,"bpmn:Process")&&n.laneSets})).forEach(o(l,t))}(r.rootElements,S)}u(t)};var u=this.handleDeferred=function(){for(;t.length;)t.shift()()};function l(n,e){D(n,e),g(n.ioSpecification,e),E(n.artifacts,e),r(n)}function m(n,e){f(n,e)}function p(n,e){f(n,e)}function d(n,e){f(n,e)}function h(n,e){f(n,e)}function b(n,e){f(n,e)}function E(n,e){forEach(n,(function(n){is(n,"bpmn:Association")?t.push((function(){b(n,e)})):b(n,e)}))}function g(n,e){n&&(forEach(n.dataInputs,o(d,e)),forEach(n.dataOutputs,o(h,e)))}var S=this.handleSubProcess=function(n,e){D(n,e),E(n.artifacts,e)};function w(n,e){var i=f(n,e);is(n,"bpmn:SubProcess")&&S(n,i||e),is(n,"bpmn:Activity")&&g(n.ioSpecification,e),t.push((function(){forEach(n.dataInputAssociations,o(p,e)),forEach(n.dataOutputAssociations,o(p,e))}))}function v(n,e){t.push((function(){var t=f(n,e);n.childLaneSet&&T(n.childLaneSet,t||e),function(n){forEach(n.flowNodeRef,(function(e){var t=e.get("lanes");t&&t.push(n)}))}(n)}))}function T(n,e){forEach(n.lanes,o(v,e))}function D(n,e){!function(n,e){forEach(n,(function(n){is(n,"bpmn:SequenceFlow")?t.push((function(){!function(n,e){f(n,e)}(n,e)})):is(n,"bpmn:BoundaryEvent")?t.unshift((function(){w(n,e)})):is(n,"bpmn:FlowNode")?w(n,e):is(n,"bpmn:DataObject")||(is(n,"bpmn:DataStoreReference")||is(n,"bpmn:DataObjectReference")?function(n,e){f(n,e)}(n,e):a(`unrecognized flowElement ${elementToString(n)} in context ${elementToString(e&&e.businessObject)}`,{element:n,context:e}))}))}(n.flowElements,e),n.laneSets&&function(n,e){forEach(n,o(T,e))}(n.laneSets,e)}function $(n,e){var t=f(n,e),i=n.processRef;i&&l(i,t||e)}}