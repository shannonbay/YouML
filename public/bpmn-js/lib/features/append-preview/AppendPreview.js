import{assign,isNil}from"min-dash";const round=Math.round;export default function AppendPreview(e,t,n,i,o,r){this._complexPreview=e,this._connectionDocking=t,this._elementFactory=n,this._eventBus=i,this._layouter=o,this._rules=r}AppendPreview.prototype.create=function(e,t,n){const i=this._complexPreview,o=this._connectionDocking,r=this._elementFactory,c=this._eventBus,s=this._layouter,a=this._rules,p=r.createShape(assign({type:t},n)),l=c.fire("autoPlace",{source:e,shape:p});if(!l)return;assign(p,{x:l.x-round(p.width/2),y:l.y-round(p.height/2)});const u=a.allowed("connection.create",{source:e,target:p,hints:{targetParent:e.parent}});let h=null;u&&(h=r.createConnection(u),h.waypoints=s.layoutConnection(h,{source:e,target:p}),h.waypoints=o.getCroppedWaypoints(h,e,p)),i.create({created:[p,h].filter((e=>!isNil(e)))})},AppendPreview.prototype.cleanUp=function(){this._complexPreview.cleanUp()},AppendPreview.$inject=["complexPreview","connectionDocking","elementFactory","eventBus","layouter","rules"];