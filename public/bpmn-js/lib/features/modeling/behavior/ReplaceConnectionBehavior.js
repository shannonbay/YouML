import{forEach,find,matchPattern}from"min-dash";import inherits from"inherits-browser";import CommandInterceptor from"diagram-js/lib/command/CommandInterceptor";import{is}from"../../../util/ModelUtil";export default function ReplaceConnectionBehavior(e,n,o,t){CommandInterceptor.call(this,e);var i=t.get("dragging",!1);function c(e){var t,i,c=e.source,r=e.target;e.parent&&(is(e,"bpmn:SequenceFlow")&&(o.canConnectSequenceFlow(c,r)||(i=!0),o.canConnectMessageFlow(c,r)&&(t="bpmn:MessageFlow")),is(e,"bpmn:MessageFlow")&&(o.canConnectMessageFlow(c,r)||(i=!0),o.canConnectSequenceFlow(c,r)&&(t="bpmn:SequenceFlow")),i&&n.removeConnection(e),t&&n.connect(c,r,{type:t,waypoints:e.waypoints.slice()}))}this.postExecuted("elements.move",(function(e){var n=e.closure.allConnections;forEach(n,c)}),!0),this.preExecute("connection.reconnect",(function(e){var t,c,r=e.context,a=r.connection,s=r.newSource||a.source,p=r.newTarget||a.target;(t=o.canConnect(s,p))&&t.type!==a.type&&(c=n.connect(s,p,{type:t.type,associationDirection:t.associationDirection,waypoints:a.waypoints.slice()}),a.parent&&n.removeConnection(a),r.connection=c,i&&function(e,n){var o,t=i.context(),c=t&&t.payload.previousSelection;c&&c.length&&-1!==(o=c.indexOf(e))&&c.splice(o,1,n)}(a,c))})),this.postExecuted("element.updateProperties",(function(e){var o,t=e.context,i=t.properties,c=t.element,r=c.businessObject;i.default&&(o=find(c.outgoing,matchPattern({id:c.businessObject.default.id})))&&n.updateProperties(o,{conditionExpression:void 0}),i.conditionExpression&&r.sourceRef.default===r&&n.updateProperties(c.source,{default:void 0})}))}inherits(ReplaceConnectionBehavior,CommandInterceptor),ReplaceConnectionBehavior.$inject=["eventBus","modeling","bpmnRules","injector"];