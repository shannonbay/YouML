import{assign}from"min-dash";import inherits from"inherits-browser";import CommandInterceptor from"diagram-js/lib/command/CommandInterceptor";import{getConnectionAdjustment as getConnectionAnchorPoint}from"./util/ConnectionLayoutUtil";export default function LayoutConnectionBehavior(n,o){function t(n,o){var t=n.context,i=t.connection,e=assign({},t.hints),a=t.newWaypoints||i.waypoints,c=t.oldWaypoints;return void 0===e.startChanged&&(e.startChanged=!!e.connectionStart),void 0===e.endChanged&&(e.endChanged=!!e.connectionEnd),getConnectionAnchorPoint(o,a,c,e)}CommandInterceptor.call(this,n),this.postExecute(["connection.layout","connection.updateWaypoints"],(function(n){var i=n.context.connection,e=i.outgoing;i.incoming.forEach((function(i){var e=i.waypoints[i.waypoints.length-1],a=t(n,e),c=[].concat(i.waypoints.slice(0,-1),[a]);o.updateWaypoints(i,c)})),e.forEach((function(i){var e=i.waypoints[0],a=t(n,e),c=[].concat([a],i.waypoints.slice(1));o.updateWaypoints(i,c)}))})),this.postExecute(["connection.move"],(function(n){var t=n.context,i=t.connection,e=i.outgoing,a=i.incoming,c=t.delta;a.forEach((function(n){var t=n.waypoints[n.waypoints.length-1],i={x:t.x+c.x,y:t.y+c.y},e=[].concat(n.waypoints.slice(0,-1),[i]);o.updateWaypoints(n,e)})),e.forEach((function(n){var t=n.waypoints[0],i={x:t.x+c.x,y:t.y+c.y},e=[].concat([i],n.waypoints.slice(1));o.updateWaypoints(n,e)}))}))}inherits(LayoutConnectionBehavior,CommandInterceptor),LayoutConnectionBehavior.$inject=["eventBus","modeling"];