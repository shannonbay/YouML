doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title YouML Diagram Generator
    script(src="/plantuml-encoder/dist/plantuml-decoder.min.js") // Update the path to point to the correct location in your public folder
  body
    div(style='display: flex; align-items: center;')
      img(src='/images/logo.webp', alt='Icon', style='vertical-align: middle; margin-right: 10px; width: 80px; height: 80px;')
      h1 YouML Diagram Generator
    textarea#umlPrompt(rows="4", cols="50", placeholder="Describe your UML diagram...")
    button(onclick="generateDiagram(false)") Generate Diagram
    button(onclick="generateDiagram(true)") Update Diagram
    div#diagramOutput
    div#encodedDiagramContainer
      a#copyLink(href="javascript:void(0);", onclick="copyDecodedDiagram()") Copy
      div#encodedDiagram

    script.
      let lastGeneratedDiagram = null;

      async function generateDiagram(isUpdate) {
        const prompt = document.getElementById('umlPrompt').value;

        try {
          const response = await fetch('/generate-uml', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ prompt, isUpdate, lastPlantUmlCode: lastGeneratedDiagram }),
          });

          if (response.ok) {
            const { svgData, encodedDiagram } = await response.json();
            const decodedDiagram = plantumlEncoder.decode(encodedDiagram);
            document.getElementById('encodedDiagram').innerText = decodedDiagram;
            document.getElementById('diagramOutput').innerHTML = svgData;
            lastGeneratedDiagram = encodedDiagram; // Store the last generated diagram for future updates
          } else {
            console.error('Failed to generate diagram');
          }
        } catch (error) {
          console.error('Error:', error);
        }
      }

      function copyDecodedDiagram() {
        const decodedText = document.getElementById('encodedDiagram').innerText;
        navigator.clipboard.writeText(decodedText).then(() => {
          alert('Decoded diagram text copied to clipboard!');
        }).catch(err => {
          console.error('Failed to copy text: ', err);
        });
      }
